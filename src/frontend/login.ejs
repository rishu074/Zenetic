<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Zenetic - Login</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        }

        body {
            background-color: #0f172a;
            color: #e2e8f0;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .login-container {
            background-color: #1e293b;
            padding: 2.5rem;
            border-radius: 1rem;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            width: 100%;
            max-width: 400px;
            margin: 1rem;
        }

        .login-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .login-header h1 {
            font-size: 2rem;
            font-weight: 600;
            color: #f8fafc;
            margin-bottom: 0.5rem;
        }

        .login-header p {
            color: #94a3b8;
            font-size: 0.875rem;
        }

        .login-form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .form-group {
            position: relative;
        }

        .password-input {
            width: 100%;
            padding: 1rem;
            background-color: #334155;
            border: 2px solid #475569;
            border-radius: 0.5rem;
            color: #f8fafc;
            font-size: 1rem;
            transition: all 0.2s ease;
        }

        .password-input:focus {
            outline: none;
            border-color: #60a5fa;
            box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.2);
        }

        .submit-btn {
            background-color: #3b82f6;
            color: #ffffff;
            padding: 1rem;
            border: none;
            border-radius: 0.5rem;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .submit-btn:hover {
            background-color: #2563eb;
        }

        .submit-btn:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        .error {
            animation: shake 0.5s ease-in-out;
            border-color: #ef4444 !important;
        }

        .error-message {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.5rem;
            display: none;
        }

        .submit-btn:disabled {
            background-color: #64748b;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-header">
            <h1>Zenetic</h1>
            <p>Enter your password to continue</p>
        </div>
        <form id="loginForm" class="login-form">
            <div class="form-group">
                <input 
                    type="password" 
                    name="password" 
                    class="password-input"
                    placeholder="Enter your password"
                    required
                    autocomplete="current-password"
                >
                <div class="error-message">Invalid password</div>
            </div>
            <button type="submit" class="submit-btn">Login</button>
        </form>
    </div>

    <script>
        const form = document.getElementById('loginForm');
        const passwordInput = document.querySelector('.password-input');
        const errorMessage = document.querySelector('.error-message');
        const submitButton = document.querySelector('.submit-btn');

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            if (!passwordInput.value) {
                passwordInput.classList.add('error');
                errorMessage.textContent = 'Password is required';
                errorMessage.style.display = 'block';
                setTimeout(() => {
                    passwordInput.classList.remove('error');
                }, 500);
                return;
            }

            try {
                submitButton.disabled = true;
                submitButton.textContent = 'Logging in...';

                const response = await fetch('/api/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ password: passwordInput.value })
                });

                const data = await response.json();

                if (!response.ok) {
                    throw new Error(data.message || 'Login failed');
                }

                if (data?.data?.redirect) {
                    window.location.href = data.data.redirect;
                }
            } catch (error) {
                passwordInput.classList.add('error');
                errorMessage.textContent = error.message || 'An error occurred';
                errorMessage.style.display = 'block';
                setTimeout(() => {
                    passwordInput.classList.remove('error');
                }, 500);
            } finally {
                submitButton.disabled = false;
                submitButton.textContent = 'Login';
                passwordInput.value = '';
            }
        });

        passwordInput.addEventListener('input', () => {
            errorMessage.style.display = 'none';
            passwordInput.classList.remove('error');
        });
    </script>
</body>
</html>     

